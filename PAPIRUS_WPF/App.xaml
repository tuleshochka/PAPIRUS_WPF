<Application x:Class="PAPIRUS_WPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:PAPIRUS_WPF"
             xmlns:lc="clr-namespace:PAPIRUS_WPF"
             StartupUri="MainWindow.xaml"
             xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"  
            mc:Ignorable="PresentationOptions">
    <Application.Resources>

        <LinearGradientBrush x:Key="MarkerFill" StartPoint="0,0" EndPoint="1,1" PresentationOptions:Freeze="True">
            <GradientStop Color="#54AC51AB" Offset="0"/>
            <GradientStop Color="#54F606F5" Offset="0.5"/>
            <GradientStop Color="#54AC51AB" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="MarkerStroke" PresentationOptions:Freeze="True"  Color="#FFF505F5" />
        <Style x:Key="LogicCircuitBackground" TargetType="{x:Type Canvas}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Background">
                <Setter.Value>
                    <DrawingBrush Viewport="{x:Static lc:Symbol.LogicalCircuitBackgroundTile}" ViewportUnits="Absolute" TileMode="Tile">
                        <DrawingBrush.Drawing>
                            <DrawingGroup>
                                <GeometryDrawing Brush="White">
                                    <GeometryDrawing.Geometry>
                                        <RectangleGeometry Rect="0,0,102,102"/>
                                    </GeometryDrawing.Geometry>
                                </GeometryDrawing>
                                <GeometryDrawing Brush="#D0000000">
                                    <GeometryDrawing.Geometry>
                                        <GeometryGroup>
                                            <RectangleGeometry Rect="98,98,10,10"/>
                                        </GeometryGroup>
                                    </GeometryDrawing.Geometry>
                                </GeometryDrawing>
                            </DrawingGroup>
                        </DrawingBrush.Drawing>
                    </DrawingBrush>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CircuitDescriptorGroup" TargetType="GroupItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GroupItem">
                        <Expander IsExpanded="{Binding Path=Items[0].CategoryExpanded}">
                            <Expander.Header>
                                <TextBlock FontWeight="Bold" Foreground="{x:Static SystemColors.AppWorkspaceBrush}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Text" Value="{Binding Path=Name}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=Name}" Value="">
                                                    <Setter Property="Text" Value="{Binding Path=Items[0].Circuit.CircuitProject.ProjectSet.Project.Name}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Expander.Header>
                            <Expander.Content>
                                <ItemsPresenter/>
                            </Expander.Content>
                        </Expander>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="MyExpanderTemplateKey" TargetType="{x:Type Expander}">
            <ToggleButton Name="Expander" ClickMode="Press" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                <ToggleButton.Style>
                    <Style TargetType="ToggleButton">
                        <Setter Property="FrameworkElement.Focusable" Value="False"/>
                        <Setter Property="FrameworkElement.Width" Value="19"/>
                        <Setter Property="FrameworkElement.Height" Value="13"/>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border Height="10" Width="10" BorderBrush="Black" BorderThickness="1">
                                        <Border Name="BackgroundBorder"  Background="Blue"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                                            <Setter Property="Background" TargetName="BackgroundBorder" Value="Red"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>
        </ControlTemplate>

        <Style x:Key="MyexpanderStyle" TargetType="{x:Type Expander}">
            <Setter Property="Template" Value="{StaticResource MyExpanderTemplateKey}"/>
        </Style>


    </Application.Resources>
</Application>
