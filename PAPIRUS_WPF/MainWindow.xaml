<Window 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PAPIRUS_WPF"
        xmlns:Elements="clr-namespace:PAPIRUS_WPF.Elements" x:Class="PAPIRUS_WPF.MainWindow"
        x:Name="Form"
        mc:Ignorable="d"
        Title="ПАПИРУС" Height="500" Width="812"
        ResizeMode="CanResizeWithGrip"
        MinWidth="812" MinHeight="500"
        UseLayoutRounding="True"
        SnapsToDevicePixels="True" KeyDown="Form_KeyDown">


    <Grid RenderTransformOrigin="0.5,0.5">
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="100"/>
            <ColumnDefinition Width="*"/>

        </Grid.ColumnDefinitions>
        <Menu Padding="3,1" Background="Transparent"  Grid.Column="0" Grid.ColumnSpan="2" Height="24" VerticalAlignment="Center">
            <MenuItem Header="Файл">
                <MenuItem Header="Создать" Click="NewFile_Click"/>
                <MenuItem Header="Открыть" Click="Open_Click"/>
                <MenuItem Header="Сохранить" Click="Save_Click"/>
                <MenuItem Header="Сохранить как" Click="SaveAs_Click"/>
            </MenuItem>
            <MenuItem Header="Правка"/>
            <MenuItem Header="Расчёты">
                <MenuItem Header="Вычисления" Click="Calculactions_Click"/>
            </MenuItem>
            <MenuItem Header="Библиотека">
                <MenuItem Header="Добавить элемент" Click="AddElement_Click"/>
                <MenuItem Header="Удалить элемент" Click="RemoveElement_Click_1"/>
            </MenuItem>
            <MenuItem Header="Справка"/>
        </Menu>
        <!--<GroupBox Grid.Row="1" Header="Nice">
            <ListView SelectionMode="Single" BorderThickness="0" HorizontalContentAlignment="Stretch"
						ItemsSource="{Binding Source={StaticResource circuitDescriptorList}}"
					>
                <ListView.GroupStyle>
                    <GroupStyle ContainerStyle="{StaticResource CircuitDescriptorGroup}"/>
                </ListView.GroupStyle>
                <ListView.Resources>
                    <Style TargetType="ContentControl">
                        <Setter Property="IsTabStop" Value="False"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="MinWidth" Value="75"/>
                        <Setter Property="Margin" Value="3,3,8,3"/>
                        <Setter Property="Content" Value="{Binding Path=CircuitGlyph.Glyph}"/>
                        <Setter Property="FlowDirection" Value="LeftToRight"/>
                        <Setter Property="LayoutTransform">
                            <Setter.Value>
                                <ScaleTransform ScaleX="0.75" ScaleY="0.75"/>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="SnapsToDevicePixels" Value="False"/>
                    </Style>

                    <Style x:Key="DescriptorPanel" TargetType="StackPanel">
                        <Setter Property="Orientation" Value="Horizontal"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <EventSetter Event="MouseDown" Handler="DescriptorMouseDown"/>
                        <EventSetter Event="MouseUp" Handler="DescriptorMouseUp"/>
                        <EventSetter Event="MouseMove" Handler="DescriptorMouseMove"/>
                    </Style>

                    <Style x:Key="PropertyLabel" TargetType="TextBlock">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Margin" Value="5,0"/>
                    </Style>

                    <Style x:Key="CircuitName" TargetType="TextBlock">
                        <Setter Property="Text" Value="{Binding Path=Circuit.Name}"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Margin" Value="16,0,0,0"/>
                    </Style>

                    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                        <Setter Property="Margin" Value="1"/>
                    </Style>

                    <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                        <Setter Property="Margin" Value="1"/>
                    </Style>

                    <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                        <Setter Property="Margin" Value="1"/>
                    </Style>

                    <Style TargetType="lc:AutoWidthComboBox" BasedOn="{StaticResource {x:Type lc:AutoWidthComboBox}}">
                        <Setter Property="Margin" Value="1"/>
                    </Style>

                    <Style x:Key="PropertyGrid" TargetType="lc:AutoGrid">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>

                    <DataTemplate DataType="{x:Type local:Object}">
                        <DataTemplate.Resources>
                            <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                                <Setter Property="MinWidth" Value="42"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=InputCountRangeLength}" Value="0">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataTemplate.Resources>
                        <StackPanel Style="{StaticResource DescriptorPanel}">
                            <ContentControl/>
                            <ComboBox
										SelectedItem="{Binding Path=InputCount, Mode=TwoWay}"
										ItemsSource="{Binding Path=InputCountRange}"
										
									/>
                            <TextBlock Style="{StaticResource CircuitName}"/>
                        </StackPanel>
                    </DataTemplate>

                </ListView.Resources>
            </ListView>
        </GroupBox> -->
        <GroupBox Grid.Column="1" Grid.Row="1"  Focusable="True">
            <ScrollViewer x:Name="DiagramScroll"
					HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Visible"
					
					FlowDirection="LeftToRight">
                <Canvas
                x:Name="CircuitCanvas"
                Width="1600"
			    Height="1200"
                HorizontalAlignment="Left" VerticalAlignment="Top"
                Style="{StaticResource LogicCircuitBackground}" AllowDrop="True" Drop="CircuitCanvas_Drop_1" MouseWheel="CircuitCanvas_MouseWheel" Focusable="True">
                    <Path Stroke="Black" StrokeThickness="1">
                        <Path.Data>
                            <GeometryGroup x:Name="Connections"/>
                        </Path.Data>
                    </Path>
                    <Canvas.LayoutTransform>
                        <ScaleTransform
								ScaleX="{Binding Value, ElementName=zoom}"
								ScaleY="{Binding Value, ElementName=zoom}"
							/>
                    </Canvas.LayoutTransform>
                </Canvas>
            </ScrollViewer>
        </GroupBox>
        <StatusBar Grid.Row="2" Grid.ColumnSpan="2">
            <StatusBarItem DockPanel.Dock="Right">
                <StackPanel Orientation="Horizontal">
                    <Label Content="Увеличение" Target="{Binding ElementName=zoom}" Margin="0" FontSize="12"/>
                    <Slider Width="100" x:Name="zoom" VerticalAlignment="Center" 
						Minimum="0.7" Maximum="3" Value="1"
						IsMoveToPointEnabled="True"
						TickPlacement="TopLeft"
						Ticks="0, 0.5, 1, 1.5, 2, 2.5, 3"
						ToolTip="Установить масштаб">

                        <Slider.LayoutTransform>
                            <ScaleTransform ScaleX="1" ScaleY="0.8"/>
                        </Slider.LayoutTransform>
                    </Slider>
                    <TextBlock VerticalAlignment="Center" MinWidth="50" Margin="3,0"
                        x:Name="TextZoom"
						Text="{Binding Value, ElementName=zoom, StringFormat=P0}"
						ToolTip="Текущее увеличение" FontSize="12" 
					/>
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem DockPanel.Dock="Left">
                <TextBlock Margin="8,0" Text="{Binding Status}" VerticalAlignment="Center" ToolTip="{Binding Status}"/>
            </StatusBarItem>
        </StatusBar>

        <ListView x:Name="ObjectSelector" Grid.Row="1" PreviewMouseDown="ObjectSelector_PreviewMouseDown_1" Focusable="False" IsTextSearchEnabled="False" VerticalAlignment="Top" BorderThickness="0,0,0,0">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="IsSelected" Value="True"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel HorizontalAlignment="Center" Width="{Binding (FrameworkElement.ActualWidth), 
                        RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}"
                        ItemWidth="{Binding (ListView.View).ItemWidth, 
                        RelativeSource={RelativeSource AncestorType=ListView}}"
                        MinWidth="{Binding ItemWidth, RelativeSource={RelativeSource Self}}"
                        ItemHeight="{Binding (ListView.View).ItemHeight, 
                        RelativeSource={RelativeSource AncestorType=ListView}}"/>
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>

            <Elements:two_pole CanMove="false" DefaultNumberVisible="Hidden"/>
            <Elements:four_pole CanMove="false" DefaultNumberVisible="Hidden"/>
            <Elements:six_pole CanMove="false" DefaultNumberVisible="Hidden"/>
            <Elements:eight_pole CanMove="false" DefaultNumberVisible="Hidden"/>
            <Elements:twentyfour_pole CanMove="false" DefaultNumberVisible="Hidden"/>
            <Elements:generator CanMove="false" DefaultNumberVisible="Hidden"/>
        </ListView>
    </Grid>
</Window>
